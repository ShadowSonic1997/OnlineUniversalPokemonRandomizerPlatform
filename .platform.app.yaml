name: pokemon-randomizer

type: python:3.9

disk: 512

hooks:
    build: |
        # Create a patch for the CheerpJ loader
        cat > cheerpj-fix.js << 'EOL'
        // Monkey patch the CheerpJ IndexedDB handling
        (function() {
          // Run when the page loads, before CheerpJ starts
          window.addEventListener('load', function() {
            // Try to delete and recreate the database with proper schema
            try {
              console.log("Initializing IndexedDB for CheerpJ");
              
              // First, try to delete any existing database
              const deleteReq = indexedDB.deleteDatabase('cheerpjFS');
              
              deleteReq.onsuccess = function() {
                console.log("Creating fresh CheerpJ database");
                
                // Create a new database with the correct schema
                const openReq = indexedDB.open('cheerpjFS', 1);
                
                openReq.onupgradeneeded = function(event) {
                  const db = event.target.result;
                  console.log("Creating object stores");
                  
                  // Create the required object stores
                  if (!db.objectStoreNames.contains('files')) {
                    db.createObjectStore('files', { keyPath: 'path' });
                  }
                  
                  if (!db.objectStoreNames.contains('metadata')) {
                    db.createObjectStore('metadata', { keyPath: 'path' });
                  }
                };
                
                openReq.onsuccess = function() {
                  console.log("Database initialized successfully");
                };
                
                openReq.onerror = function(e) {
                  console.error("Error creating database", e);
                };
              };
              
              deleteReq.onerror = function(e) {
                console.error("Could not delete old database", e);
              };
              
              // Patch the transaction method to prevent errors
              const originalTransaction = IDBDatabase.prototype.transaction;
              IDBDatabase.prototype.transaction = function() {
                try {
                  return originalTransaction.apply(this, arguments);
                } catch (e) {
                  console.warn("Transaction error intercepted:", e);
                  // Return a mock object that won't crash
                  return {
                    objectStore: function() {
                      return {
                        put: function() { return { onsuccess: null }; },
                        get: function() { return { onsuccess: null }; }
                      };
                    }
                  };
                }
              };
            } catch (e) {
              console.error("Error setting up IndexedDB:", e);
            }
          });
        })();
        EOL
        
        # Prepare a temporary index file
        mkdir -p temp
        cp index.html temp/
        
        # Insert our fix script right after the opening head tag
        sed -i '/<head>/a <script src="cheerpj-fix.js"></script>' temp/index.html
        
        # Copy the modified index back
        cp temp/index.html .
        
        # Clean up
        rm -rf temp

web:
    locations:
        "/":
            root: ""
            index:
                - index.html
            expires: 1h
            scripts: false
            allow: true
