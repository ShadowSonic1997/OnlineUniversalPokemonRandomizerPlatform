name: pokemon-randomizer

type: python:3.9

disk: 512

# No custom server, use Platform.sh's built-in web server

hooks:
    build: |
        # Prepare the files with the fixes we need
        # Create a basic HTML page to test
        cat > index.html << 'EOL'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>Pokemon Randomizer</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; }
                h1 { color: #333; }
                .container { max-width: 800px; margin: 0 auto; }
                button { padding: 10px 20px; margin: 10px 0; cursor: pointer; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>Pokemon Randomizer</h1>
                <p>Welcome to the Online Pokemon Randomizer.</p>
                <p>This application is currently being set up. Please check back later.</p>
                <button id="testDatabase">Test IndexedDB</button>
                <div id="dbStatus"></div>
            </div>
            
            <script>
                // Test the IndexedDB functionality
                document.getElementById('testDatabase').addEventListener('click', function() {
                    const status = document.getElementById('dbStatus');
                    status.textContent = 'Testing IndexedDB...';
                    
                    try {
                        // Open a test database
                        const request = indexedDB.open('testDB', 1);
                        
                        request.onupgradeneeded = function(event) {
                            const db = event.target.result;
                            status.textContent += '\nCreating test store...';
                            
                            // Create a test store
                            if (!db.objectStoreNames.contains('testStore')) {
                                db.createObjectStore('testStore', { keyPath: 'id' });
                            }
                        };
                        
                        request.onsuccess = function(event) {
                            status.textContent += '\nDatabase opened successfully!';
                            
                            // Try adding some data
                            const db = event.target.result;
                            const tx = db.transaction('testStore', 'readwrite');
                            const store = tx.objectStore('testStore');
                            
                            store.put({ id: 1, name: 'Test Item' });
                            
                            tx.oncomplete = function() {
                                status.textContent += '\nData stored successfully. IndexedDB is working!';
                            };
                            
                            tx.onerror = function(e) {
                                status.textContent += '\nError storing data: ' + e.target.error;
                            };
                        };
                        
                        request.onerror = function(event) {
                            status.textContent +=
